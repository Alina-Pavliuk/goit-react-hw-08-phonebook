{"version":3,"sources":["redux/action/authActions.js","redux/operations/authOperations.js","constants.js","redux/selectors/authSelectors.js","Containers/Login/Login.js","Containers/Registration/Registration.js","Components/UserMenu/UserMenu.js","Components/Link/Link.js","Components/Header/Header.js","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/ContactItem/ContactItem.js","redux/action/contacts.js","redux/operations/contactOperations.js","redux/selectors/contacts-selectors.js","Containers/Contacts/Contacts.js","Components/PrivateRoute/PrivateRoute.js","Components/PublicRoute/PublicRoute.js","Components/App.js","redux/reducer/contacts.js","redux/reducer/authReducer.js","redux/store.js","index.js","Containers/Registration/Registration.module.css","Components/Header/Header.module.css","Containers/Login/Login.module.css","Components/ContactItem/ContactItem.module.css","Containers/Contacts/Contacts.module.css","Components/ContactForm/ContactForm.module.css","Components/UserMenu/UserMenu.module.css","Components/Filter/Filter.module.css"],"names":["setToken","createAction","resetToken","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","baseURL","token","axios","defaults","headers","common","Authorization","navigation","isLogIn","state","auth","getUserEmail","user","email","initialState","password","Login","useState","form","setForm","dispatch","useDispatch","inputHandlerLogin","target","name","value","className","styles","loginTitle","autoComplete","loginForm","onSubmit","e","credentials","preventDefault","a","authActions","post","then","res","data","loginLabel","loginLabelSpan","type","placeholder","suggested","loginInput","onChange","loginButton","loginMessage","to","Registration","inputHandlerRegistration","registrationTitle","registrationForm","console","log","registrationLabel","registrationLabelSpan","registrationInput","registrationButton","registrationMessage","UserMenu","useSelector","containerUserMenu","emailUserMenu","buttonUserMenu","onClick","Link","isPrivate","isPublic","navProps","isLogin","Header","nav","navList","navList__item","navList__item_link","activeClassName","navList__item_active_link","number","ContactForm","setAlert","addContact","contacts","stateForm","setStateForm","handlerInput","singleContact","some","contact","titleLabel","inputForm","formButton","Filter","filter","filterHandler","wrapperSearch","filterLabel_span","filterInput","ContactItem","id","removeContact","contactItem","paragraph","removeBtn","addContactRequest","addContactSuccess","addContactError","getContactsRequest","getContactsSuccess","getContactsError","removeContactsRequest","removeContactsSuccess","removeContactsError","editInputFilter","contactObj","payload","result","get","delete","contactsSelector","allContactsSelector","createSelector","items","filterSelector","getFilteredContacts","length","toLowerCase","includes","Contacts","filteredContacts","useHistory","start","setStart","alert","useEffect","operations","stylesApp","wrapper","CSSTransition","classNames","enterActive","alertBoxEnterActive","exitActive","alertBoxExitActive","mountOnEnter","unmountOnExit","timeout","in","alertBox","alertBtn","titleEnterActive","title","actions","TransitionGroup","contactsList","component","map","listItemEnterActive","listItemExitActive","PrivateRoute","props","PublicRoute","App","getSTate","persistedToken","path","exact","createReducer","el","_","error","getCurrentError","combineReducers","defaultMiddleware","getDefaultMiddleware","serializableCheck","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","middleware","logger","thunk","persistor","persistStore","ReactDOM","render","loading","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0b27feaf.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nconst setToken = createAction('token/set');\nconst resetToken = createAction('token/reset');\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n  setToken,\n  resetToken,\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError\n}","import axios from 'axios';\nimport authActions from '../action/authActions';\n\nexport const baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n\n  }\n}\n\nexport const registerOperation = credentials => async dispatch => {\n  try {\n    dispatch(authActions.registerRequest());\n    await axios.post(`${baseURL}/users/signup`, credentials)\n      .then(res => {\n        token.set(res.data.token);\n        dispatch(authActions.registerSuccess(res.data));\n        console.log(res);\n      })\n  } catch (error) {\n    dispatch(authActions.registerError(error))\n  }\n}\n\nexport const logIn = credentials => async dispatch => {\n  try {\n    dispatch(authActions.loginRequest);\n    await axios.post(`${baseURL}/users/login`, credentials)\n      .then(res => {\n        token.set(res.data.token);\n        dispatch(authActions.loginSuccess(res.data));\n      })\n  } catch (error) {\n    dispatch(authActions.loginError(error))\n  }\n}\n\nexport const logOut = () => async dispatch => {\n  try {\n    dispatch(authActions.logoutRequest());\n    await axios.post(`${baseURL}/users/logout`)\n      .then(() => {\n        token.unset();\n        dispatch(authActions.logoutSuccess())\n      })\n\n  } catch (error) {\n    dispatch(authActions.logoutError(error));\n  }\n}\n\nexport const getCurrentUser = () => async (dispatch, getSTate) => {\n  const {\n    auth: { token: persistedToken },\n  } = getSTate();\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  try {\n    dispatch(authActions.getCurrentUserRequest());\n    await axios.get(`${baseURL}/users/current`)\n      .then(({ data }) => dispatch(authActions.getCurrentUserSuccess(data)))\n\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error))\n  }\n}\n","export const navigation = {\n  home: '/',\n  login: '/login',\n  registration: '/register',\n  contacts: '/contacts'\n}","export const isLogIn = state => state.auth.token;\n\nexport const getUserEmail = state => state.auth.user.email;\n\n","import styles from './Login.module.css';\nimport React, { useState, useEffect } from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport { navigation } from '../../constants';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logIn } from '../../redux/operations/authOperations';\nimport { isLogIn } from '../../redux/selectors/authSelectors';\n\nconst initialState = {\n  email: '',\n  password: ''\n}\n\nconst Login = () => {\n  const [form, setForm] = useState(initialState);\n  const dispatch = useDispatch();\n\n  const inputHandlerLogin = ({ target }) => {\n    const { name, value } = target;\n    setForm(state => ({ ...state, [name]: value }))\n  }\n\n  const submitLogin = (e) => {\n    e.preventDefault()\n    dispatch(logIn(form));\n    setForm(initialState);\n  }\n\n  return (\n    <div>\n      <h2 className={styles.loginTitle}>Login</h2>\n      <form autoComplete=\"on\" className={styles.loginForm} onSubmit={submitLogin}>\n        <label className={styles.loginLabel}>\n          <span className={styles.loginLabelSpan}>Email</span>\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter email\"\n            suggested=\"email\"\n            value={form.email}\n            className={styles.loginInput}\n            onChange={inputHandlerLogin} />\n        </label>\n        <label className={styles.loginLabel}>\n          <span className={styles.loginLabelSpan}>Password</span>\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Enter password\"\n            suggested=\"password\"\n            value={form.password}\n            className={styles.loginInput}\n            onChange={inputHandlerLogin} />\n        </label>\n        <button type=\"submit\" className={styles.loginButton}>Login</button>\n      </form>\n      <p className={styles.loginMessage} >If you don't have an account please <NavLink to={navigation.registration}>Sing UP</NavLink></p>\n    </div>\n  );\n};\n\nexport default Login;","import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { navigation } from '../../constants';\nimport { registerOperation } from '../../redux/operations/authOperations';\n\nimport { useDispatch } from \"react-redux\";\nimport styles from './Registration.module.css';\n\nconst initialState = {\n  name: '',\n  email: '',\n  password: ''\n}\n\nconst Registration = () => {\n\n  const [form, setForm] = useState(initialState);\n  const dispatch = useDispatch();\n\n  const inputHandlerRegistration = ({ target }) => {\n    const { name, value } = target;\n    setForm(state => ({ ...state, [name]: value }));\n  }\n\n  const submitRegistration = (e) => {\n    e.preventDefault();\n    dispatch(registerOperation(form));\n    setForm(initialState);\n  }\n\n  return (\n    <div>\n      <h2 className={styles.registrationTitle}>Registration</h2>\n      <form autoComplete=\"on\" className={styles.registrationForm} onSubmit={submitRegistration}>\n        <label className={styles.registrationLabel}>\n          <span className={styles.registrationLabelSpan}>Name</span>\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter name\"\n            suggested=\"name\"\n            value={form.name}\n            className={styles.registrationInput}\n            onChange={inputHandlerRegistration} />\n        </label>\n        <label className={styles.registrationLabel}>\n          <span className={styles.registrationLabelSpan}>Email</span>\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter email\"\n            suggested=\"email\"\n            value={form.email}\n            className={styles.registrationInput}\n            onChange={inputHandlerRegistration} />\n        </label>\n        <label className={styles.registrationLabel}>\n          <span className={styles.registrationLabelSpan}>Password</span>\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Enter email\"\n            suggested=\"password\"\n            value={form.password}\n            className={styles.registrationInput}\n            onChange={inputHandlerRegistration} />\n        </label>\n        <button type=\"submit\" className={styles.registrationButton}>Sing Up</button>\n      </form>\n      <p className={styles.registrationMessage}>If you already have an account please <NavLink to={navigation.login}>LOGIN</NavLink></p>\n    </div>\n  );\n};\n\nexport default Registration;","import styles from './UserMenu.module.css';\nimport React from \"react\";\nimport { getUserEmail } from '../../redux/selectors/authSelectors';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logOut } from '../../redux/operations/authOperations';\n\nconst UserMenu = () => {\n  const email = useSelector(getUserEmail);\n  const dispatch = useDispatch();\n\n  const onLogOut = () => {\n    dispatch(logOut())\n  }\n\n\n  return (\n    <div className={styles.containerUserMenu}>\n      <p className={styles.emailUserMenu}>{email}</p>\n      <button className={styles.buttonUserMenu} type=\"button\" onClick={onLogOut}>Logout</button>\n    </div>\n  );\n};\n\nexport default UserMenu;","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nimport { isLogIn } from '../../redux/selectors/authSelectors';\n\nconst Link = ({ isPrivate, isPublic, ...navProps }) => {\n  const isLogin = useSelector(isLogIn);\n\n  if (isPrivate) {\n    return isLogin ? <NavLink {...navProps} /> : null;\n  }\n\n  if (isPublic) {\n    return isLogin ? null : <NavLink {...navProps} />;\n  }\n\n  return <NavLink {...navProps} />;\n}\n\nexport default Link;\n","import React from 'react';\nimport { useSelector } from \"react-redux\";\n\nimport styles from './Header.module.css';\n\nimport { navigation } from '../../constants';\nimport { NavLink } from \"react-router-dom\";\nimport UserMenu from '../UserMenu/UserMenu';\nimport { isLogIn } from '../../redux/selectors/authSelectors';\nimport Link from '../Link/Link';\n\nconst Header = () => {\n\n  const isLogin = useSelector(isLogIn);\n\n  return (\n    <header className={styles.nav}>\n      <ul className={styles.navList}>\n        <li className={styles.navList__item}>\n          {/* <NavLink\n            to={navigation.home}\n            exact\n            className={styles.navList__item_link}\n            activeClassName={styles.navList__item_active_link}>Home\n          </NavLink> */}\n        </li>\n        <li className={styles.navList__item}>\n          <Link\n            to={navigation.login}\n            className={styles.navList__item_link}\n            activeClassName={styles.navList__item_active_link}\n            isPublic\n          >\n            Login\n          </Link>\n        </li>\n        <li className={styles.navList__item}>\n          <Link\n            to={navigation.registration}\n            className={styles.navList__item_link}\n            activeClassName={styles.navList__item_active_link}\n            isPublic\n          >\n            Registration\n          </Link>\n        </li>\n        <li className={styles.navList__item}>\n          <Link\n            to={navigation.contacts}\n            className={styles.navList__item_link}\n            activeClassName={styles.navList__item_active_link}\n            isPrivate\n          >\n            Contacts\n          </Link>\n        </li>\n      </ul>\n      { isLogin && <UserMenu />}\n    </header>\n  );\n};\n\nexport default Header;","import React, { useState } from 'react';\n\nimport styles from './ContactForm.module.css';\n\nconst initialState = {\n  number: \"\",\n  name: \"\",\n}\n\nconst ContactForm = ({ setAlert, addContact, contacts }) => {\n  const [stateForm, setStateForm] = useState(initialState);\n  const { name, number } = stateForm;\n\n  const handlerInput = ({ target }) => {\n    const { name, value } = target;\n    setStateForm({ ...stateForm, [name]: value });\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const { name, number } = e.target;\n    const singleContact = {\n      name: name.value,\n      number: number.value,\n    }\n    if (contacts.some(contact => contact.name === name.value)) {\n      setAlert(true)\n    } else {\n      addContact(singleContact)\n      setStateForm({ ...initialState })\n    }\n  }\n\n  return (\n    <form className={styles.ContactForm} onSubmit={submitHandler}>\n      <label>\n        <span className={styles.titleLabel}>Name</span>\n        <input\n          className={styles.inputForm}\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          placeholder=\"Name\"\n          onChange={handlerInput}\n        />\n      </label>\n      <label>\n        <span className={styles.titleLabel}> Number</span>\n        <input\n          className={styles.inputForm}\n          type=\"text\"\n          value={number}\n          name=\"number\"\n          placeholder=\"Number\"\n          onChange={handlerInput}\n        />\n      </label>\n      <button className={styles.formButton} type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport styles from './Filter.module.css'\n\nconst Filter = ({ filter, filterHandler }) => (\n  <>\n    <div className={styles.wrapperSearch}>\n      <label>\n        <span className={styles.filterLabel_span}> Find contacts by name</span>\n        <input\n          className={styles.filterInput}\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={filterHandler}\n          placeholder=\"Search\"\n        />\n      </label>\n    </div>\n  </>\n);\n\n\nexport default Filter;\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  filterHandler: PropTypes.func.isRequired\n}","import React from 'react';\n\nimport styles from './ContactItem.module.css'\n\n\nconst ContactItem = ({ id, name, number, removeContact }) => (\n  <li className={styles.contactItem}>\n    <p className={styles.paragraph}>{name}: {number}</p>\n    <button\n      className={styles.removeBtn}\n      type=\"button\"\n      onClick={removeContact(id)}>\n      X\n    </button>\n  </li>\n);\n\nexport default ContactItem;\n\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContactRequest = createAction('contacts/addRequest');\nexport const addContactSuccess = createAction('contacts/addSuccess');\nexport const addContactError = createAction('contacts/addError');\n\nexport const getContactsRequest = createAction('contacts/getRequest');\nexport const getContactsSuccess = createAction('contacts/getSuccess');\nexport const getContactsError = createAction('contacts/getError');\n\nexport const removeContactsRequest = createAction('contacts/removeRequest');\nexport const removeContactsSuccess = createAction('contacts/removeSuccess');\nexport const removeContactsError = createAction('contacts/removeError');\n\n\n\n\nexport const addContact = createAction('contacts/add', contactObj => ({\n  payload: {\n    contactObj,\n  }\n}));\nexport const removeContact = createAction('contacts/remove');\nexport const setContacts = createAction('contacts/set');\nexport const editInputFilter = createAction('filter/edit');\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n  removeContactsRequest,\n  removeContactsSuccess,\n  removeContactsError\n} from '../action/contacts';\n\nimport { baseURL } from '../operations/authOperations';\n\nconst addContact = (contactObj) => async (dispatch) => {\n  try {\n    dispatch(addContactRequest());\n    const result = await axios.post(`${baseURL}/contacts`, contactObj);\n    dispatch(addContactSuccess(result.data));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n}\n\nconst getContacts = () => async (dispatch) => {\n  try {\n    dispatch(getContactsRequest());\n    const result = await axios.get(`${baseURL}/contacts`);\n    dispatch(getContactsSuccess(result.data));\n  } catch (error) {\n    dispatch(getContactsError(error));\n  }\n}\n\nconst removeContact = id => async (dispatch) => {\n  try {\n    dispatch(removeContactsRequest());\n    await axios.delete(`${baseURL}/contacts/${id}`);\n    dispatch(removeContactsSuccess(id));\n  } catch (error) {\n    dispatch(removeContactsError(error));\n  }\n}\n\nexport default {\n  addContact,\n  getContacts,\n  removeContact\n}\n","import { createSelector } from \"reselect\";\n\nexport const contactsSelector = (state) => state.contacts;\n\nexport const allContactsSelector = createSelector(\n  contactsSelector,\n  (contacts) => contacts.items,\n)\n\nexport const filterSelector = createSelector(\n  contactsSelector,\n  (contacts) => contacts.filter,\n)\n\nexport const getFilteredContacts = createSelector(\n  allContactsSelector,\n  filterSelector,\n  (contacts, filter) => {\n    if (contacts.length === 0) {\n      return [];\n    }\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n)\n","import stylesApp from './Contacts.module.css';\nimport React, { useState, useEffect, Suspense, lazy } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport styles from '../../Components/ContactItem/ContactItem.module.css';\nimport { useHistory } from 'react-router-dom';\nimport ContactForm from '../../Components/ContactForm/ContactForm';\nimport Filter from '../../Components/Filter/Filter';\nimport ContactItem from '../../Components/ContactItem/ContactItem';\n\nimport * as actions from '../../redux/action/contacts';\nimport operations from '../../redux/operations/contactOperations';\nimport { allContactsSelector, filterSelector, getFilteredContacts } from '../../redux/selectors/contacts-selectors';\nimport { isLogIn } from '../../redux/selectors/authSelectors';\nimport { navigation } from '../../constants';\nconst Contacts = () => {\n\n  const contacts = useSelector(allContactsSelector);\n  const filter = useSelector(filterSelector);\n  const filteredContacts = useSelector(getFilteredContacts);\n  const onLogIn = useSelector(isLogIn);\n  const history = useHistory()\n  const dispatch = useDispatch();\n  const [start, setStart] = useState(false);\n  const [alert, setAlert] = useState(false);\n\n  useEffect(() => {\n    // if (!onLogIn) {\n    //   history.replace(navigation.login);\n    //   return;\n    // }\n    dispatch(operations.getContacts());\n    setStart(true);\n  }, [dispatch]);\n\n  const filterHandler = (e) => {\n    dispatch(actions.editInputFilter(e.target.value));\n  }\n\n  const removeContact = (id) => (e) => {\n    dispatch(operations.removeContact(id));\n  }\n\n  const addContact = (singleContact) => {\n    dispatch(operations.addContact(singleContact))\n  }\n\n  return (\n    <div className={stylesApp.wrapper}>\n      <CSSTransition classNames={{\n        enterActive: stylesApp.alertBoxEnterActive,\n        exitActive: stylesApp.alertBoxExitActive\n      }}\n        mountOnEnter\n        unmountOnExit\n        timeout={300}\n        in={alert}>\n\n        <div className={stylesApp.alertBox}>\n          <h2>{`The name is already a contact`}</h2>\n          <button\n            onClick={() => setAlert(false)}\n            className={styles.alertBtn}\n            type=\"button\"\n          >X\n            </button>\n        </div>\n      </CSSTransition>\n      <CSSTransition classNames={{\n        enterActive: stylesApp.titleEnterActive,\n      }} timeout={800} in={start}>\n        <h2 className={stylesApp.title}>Phonebook </h2>\n      </CSSTransition>\n\n      <ContactForm setAlert={setAlert} addContact={addContact} contacts={contacts} />\n      <Filter filter={filter} filterHandler={filterHandler} />\n\n      <TransitionGroup className={stylesApp.contactsList} component=\"ul\">\n        {filteredContacts.map(contact =>\n          <CSSTransition\n            key={contact.id}\n            timeout={800}\n            classNames={{\n              enterActive: styles.listItemEnterActive,\n              exitActive: styles.listItemExitActive,\n            }}\n          >\n            <ContactItem {...contact} removeContact={removeContact} />\n          </CSSTransition>\n        )}\n\n      </TransitionGroup>\n    </div>\n  );\n};\n\nexport default Contacts;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n\nimport { navigation } from '../../constants';\nimport { isLogIn } from '../../redux/selectors/authSelectors';\n\nconst PrivateRoute = (props) => useSelector(isLogIn)\n  ? <Route {...props} />\n  : <Redirect to={navigation.login} />\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n\nimport { navigation } from '../../constants';\nimport { isLogIn } from '../../redux/selectors/authSelectors';\n\nconst PublicRoute = (props) => useSelector(isLogIn)\n  ? <Redirect to={navigation.contacts} />\n  : <Route {...props} />\n\nexport default PublicRoute;\n","import React, { useState, useEffect, Suspense, lazy } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Loader from 'react-loader-spinner';\n\nimport stylesApp from './App.module.css';\n\nimport { getCurrentUser } from '../redux/operations/authOperations';\n\nimport Home from '../Containers/Home/Home';\nimport Login from '../Containers/Login/Login';\nimport Registration from '../Containers/Registration/Registration';\nimport Header from '../Components/Header/Header';\nimport Contacts from '../Containers/Contacts/Contacts';\n\nimport { navigation } from '../constants';\nimport PrivateRoute from './PrivateRoute/PrivateRoute';\nimport PublicRoute from './PublicRoute/PublicRoute';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCurrentUser())\n  }, [])\n\n  return (\n    <div>\n      <Header />\n      <Switch>\n        {/* <Route exact path={navigation.home} component={Home} /> */}\n        <PublicRoute path={navigation.login} component={Login} />\n        <PublicRoute path={navigation.registration} component={Registration} />\n        <PrivateRoute exact to={navigation.contacts} component={Contacts} />\n      </Switch>\n    </div>\n  )\n}\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\n\nimport {\n  editInputFilter,\n  addContactSuccess,\n  getContactsSuccess,\n  removeContactsSuccess\n} from '../action/contacts';\n\nconst initialState = {\n  items: [],\n  filter: ''\n};\n\nexport default createReducer(initialState, {\n  [addContactSuccess]: (state, { payload }) => ({\n    ...state,\n    items: [...state.items, payload],\n  }),\n  [getContactsSuccess]: (state, { payload }) => ({\n    ...state,\n    items: [...payload],\n  }),\n  [removeContactsSuccess]: (state, { payload }) => ({\n    ...state,\n    items: state.items.filter(el => el.id !== payload),\n  }),\n  [editInputFilter]: (state, { payload }) => ({\n    ...state,\n    filter: payload,\n  }),\n})\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\nimport authActions from '../action/authActions';\n\nconst initialState = { name: null, email: null };\n\nconst user = createReducer(initialState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n  [authActions.logoutSuccess]: () => initialState,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst error = createReducer(null, {\n  [authActions.registerError]: (_, { payload }) => payload,\n  [authActions.loginError]: (_, { payload }) => payload,\n  [authActions.logoutError]: (_, { payload }) => payload,\n  [authActions.getCurrentError]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  user,\n  token,\n  error\n})\n\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport contacts from './reducer/contacts';\nimport authReducer from './reducer/authReducer';\nimport logger from 'redux-logger';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\n\nconst defaultMiddleware = getDefaultMiddleware({ serializableCheck: false });\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token']\n}\n\nconst store = configureStore({\n  reducer: {\n    contacts,\n    auth: persistReducer(authPersistConfig, authReducer)\n  },\n  middleware: [...defaultMiddleware, logger, thunk]\n})\n\nexport default store;\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store, { persistor } from './redux/store.js';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registrationForm\":\"Registration_registrationForm__3TAiX\",\"registrationInput\":\"Registration_registrationInput__1icr0\",\"registrationButton\":\"Registration_registrationButton__1m7B5\",\"registrationTitle\":\"Registration_registrationTitle__2k_Df\",\"registrationMessage\":\"Registration_registrationMessage__2TCIZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__15M3N\",\"navList\":\"Header_navList__226kJ\",\"navList__item\":\"Header_navList__item__2sUKk\",\"navList__item_link\":\"Header_navList__item_link__isq1e\",\"navList__item_active_link\":\"Header_navList__item_active_link__2uwh_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"Login_loginForm__3AuyD\",\"loginInput\":\"Login_loginInput__35Ew2\",\"loginButton\":\"Login_loginButton__2Lm8i\",\"loginTitle\":\"Login_loginTitle__3UsLj\",\"loginMessage\":\"Login_loginMessage__1qvhF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__D_wUJ\",\"listItemEnterActive\":\"ContactItem_listItemEnterActive__28bVf\",\"task\":\"ContactItem_task__20LfY\",\"listItemExitActive\":\"ContactItem_listItemExitActive__1wZ3F\",\"hinge\":\"ContactItem_hinge__m3PqO\",\"removeBtn\":\"ContactItem_removeBtn__29UAM\",\"paragraph\":\"ContactItem_paragraph__1OKz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Contacts_wrapper__18UvY\",\"formButton\":\"Contacts_formButton__2XrTD\",\"title\":\"Contacts_title__1vTDm\",\"titleEnterActive\":\"Contacts_titleEnterActive__4N2ey\",\"task\":\"Contacts_task__1S9jx\",\"contactsList\":\"Contacts_contactsList__2XRQ5\",\"alertBox\":\"Contacts_alertBox__Nat0I\",\"alertBoxEnterActive\":\"Contacts_alertBoxEnterActive__2Lwty\",\"alertBoxExitActive\":\"Contacts_alertBoxExitActive__nWt6n\",\"hinge\":\"Contacts_hinge__2vquC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__212Qj\",\"titleLabel\":\"ContactForm_titleLabel__2badp\",\"inputForm\":\"ContactForm_inputForm__2de9Q\",\"formButton\":\"ContactForm_formButton__fthjp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"emailUserMenu\":\"UserMenu_emailUserMenu__2RJDg\",\"containerUserMenu\":\"UserMenu_containerUserMenu__bEiPW\",\"buttonUserMenu\":\"UserMenu_buttonUserMenu__2zvrm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__AdX91\",\"filterLabel_span\":\"Filter_filterLabel_span__oJAe_\",\"wrapperSearch\":\"Filter_wrapperSearch__3WE7k\"};"],"sourceRoot":""}